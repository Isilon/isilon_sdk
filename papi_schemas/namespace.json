{
    "/namespace": {
        "get": {
            "description": "Retrieves the namespace access points available for the authenticated user.",
            "operationId": "listAccessPoints",
            "parameters": [
                {
                    "description": "Protocol versions that are supported for the current namespace access server.",
                    "in": "query",
                    "name": "versions",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "List namespace access points.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceAccessPoints"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{AccessPointName}": {
        "put": {
            "description": "Creates a namespace access point in the file system. Only root users can create or change namespace access points.",
            "operationId": "createAccessPoint",
            "parameters": [
                {
                    "description": "Access point name.",
                    "in": "path",
                    "name": "AccessPointName",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Access point parameters model.",
                    "in": "body",
                    "name": "AccessPoint",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/AccessPointCreateParams"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Created access point.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "delete": {
            "description": "Deletes a namespace access point. Only root users can delete namespace access points.",
            "operationId": "deleteAccessPoint",
            "parameters": [
                {
                    "description": "Access point name.",
                    "in": "path",
                    "name": "AccessPointName",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Deleted access point.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{NamespacePath}": {
        "get": {
            "description": "Retrieves the access control list for a namespace object.",
            "operationId": "getAcl",
            "parameters": [
                {
                    "description": "Namespace path relative to /.",
                    "in": "path",
                    "name": "NamespacePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Show access control lists.",
                    "in": "query",
                    "name": "acl",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "Indicates that the operation is on the access point instead of the store path.",
                    "in": "query",
                    "name": "nsaccess",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get namespace ACL.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceAcl"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Sets the access control list for a namespace.",
            "operationId": "setAcl",
            "parameters": [
                {
                    "description": "Namespace path relative to /.",
                    "in": "path",
                    "name": "NamespacePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Update access control lists.",
                    "in": "query",
                    "name": "acl",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "Indicates that the operation is on the access point instead of the store path.",
                    "in": "query",
                    "name": "nsaccess",
                    "type": "boolean"
                },
                {
                    "description": "Namespace ACL parameters model.",
                    "in": "body",
                    "name": "NamespaceAcl",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/NamespaceAcl"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Set namespace ACL.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{DirectoryPath}": {
        "get": {
            "description": "Retrieves a list of files and subdirectories from a directory.",
            "operationId": "getDirectoryContents",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies which object attributes are displayed.",
                    "in": "query",
                    "name": "detail",
                    "type": "string"
                },
                {
                    "description": "Specifies the maximum number of objects to send to the client.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer"
                },
                {
                    "description": "Specifies a token to return in the JSON result to indicate when there is a next page.",
                    "in": "query",
                    "name": "resume",
                    "type": "string"
                },
                {
                    "description": "Specifies one or more attributes to sort on the directory entries.",
                    "in": "query",
                    "name": "sort",
                    "type": "string"
                },
                {
                    "description": "Specifies the sort direction. This value can be either ascending (ASC) or descending (DESC).",
                    "in": "query",
                    "name": "dir",
                    "type": "string"
                },
                {
                    "description": "Specifies the object type to return, which can be one of the following values: container, object, pipe, character_device, block_device, symbolic_link, socket, or whiteout_file.",
                    "in": "query",
                    "name": "type",
                    "type": "string"
                },
                {
                    "description": "Specifies if hidden objects are returned.",
                    "in": "query",
                    "name": "hidden",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "List directory objects.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceObjects"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "head": {
            "description": "Retrieves the attribute information for a specified directory without transferring the contents of the directory.",
            "operationId": "getDirectoryAttributes",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Returns only files that were modified since the specified time. If no files were modified since this time, a 304 message is returned.",
                    "in": "header",
                    "name": "If-Modified-Since",
                    "type": "string"
                },
                {
                    "description": "Returns only files that were not modified since the specified time. If there are no unmodified files since this time, a 412 message is returned to indicate that the precondition failed.",
                    "in": "header",
                    "name": "If-Unmodified-Since",
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get attribute information for directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Creates a directory with a specified path.",
            "operationId": "createDirectory",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the resource type.",
                    "in": "header",
                    "name": "x-isi-ifs-target-type",
                    "required": true,
                    "default": "container",
                    "type": "string"
                },
                {
                    "default": "0700",
                    "description": "Specifies a pre-defined ACL value or POSIX mode with a string in octal string format.",
                    "in": "header",
                    "name": "x-isi-ifs-access-control",
                    "type": "string"
                },
                {
                    "description": "Specifies a pre-defined ACL value or POSIX mode with a string.",
                    "in": "header",
                    "name": "x-isi-ifs-node-pool-name",
                    "type": "string"
                },
                {
                    "description": "Specifies the OneFS node pool name.",
                    "in": "query",
                    "name": "recursive",
                    "type": "boolean"
                },
                {
                    "description": "Deletes and replaces the existing user attributes and ACLs of the directory with user-specified attributes and ACLS from the header, when set to true.",
                    "in": "query",
                    "name": "overwrite",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Create directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "post": {
            "description": "Moves a directory from an existing source to a new destination path.",
            "operationId": "moveDirectory",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the full path for the destination directory.",
                    "in": "header",
                    "name": "x-isi-ifs-set-location",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Move directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "delete": {
            "description": "Deletes the directory at the specified path.",
            "operationId": "deleteDirectory",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Deletes directories recursively, when set to true.",
                    "in": "query",
                    "name": "recursive",
                    "type": "boolean"
                }
            ],
            "responses": {
                "204": {
                    "description": "Deleted directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{AccessPoint}/{ContainerPath}": {
        "get": {
            "description": "Retrieves a list of files and subdirectories from a directory.",
            "operationId": "getDirectoryWithAccessPointContainerPath",
            "parameters": [
                {
                    "description": "Access point.",
                    "in": "path",
                    "name": "AccessPoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Container path relative to access point.",
                    "in": "path",
                    "name": "ContainerPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies which object attributes are displayed.",
                    "in": "query",
                    "name": "detail",
                    "type": "string"
                },
                {
                    "description": "Specifies the maximum number of objects to send to the client.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer"
                },
                {
                    "description": "Specifies a token to return in the JSON result to indicate when there is a next page.",
                    "in": "query",
                    "name": "resume",
                    "type": "string"
                },
                {
                    "description": "Specifies one or more attributes to sort on the directory entries.",
                    "in": "query",
                    "name": "sort",
                    "type": "string"
                },
                {
                    "description": "Specifies the sort direction. This value can be either ascending (ASC) or descending (DESC).",
                    "in": "query",
                    "name": "dir",
                    "type": "string"
                },
                {
                    "description": "Specifies the object type to return, which can be one of the following values: container, object, pipe, character_device, block_device, symbolic_link, socket, or whiteout_file.",
                    "in": "query",
                    "name": "type",
                    "type": "string"
                },
                {
                    "description": "Specifies if hidden objects are returned.",
                    "in": "query",
                    "name": "hidden",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "List directory objects.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceObjects"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Creates a directory with a specified accesspoint and container path.",
            "operationId": "createDirectoryWithAccessPointContainerPath",
            "parameters": [
                {
                    "description": "Access point.",
                    "in": "path",
                    "name": "AccessPoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Directory path relative to access point.",
                    "in": "path",
                    "name": "ContainerPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the resource type.",
                    "in": "header",
                    "name": "x-isi-ifs-target-type",
                    "required": true,
                    "default": "container",
                    "type": "string"
                },
                {
                    "default": "0700",
                    "description": "Specifies a pre-defined ACL value or POSIX mode with a string in octal string format.",
                    "in": "header",
                    "name": "x-isi-ifs-access-control",
                    "type": "string"
                },
                {
                    "description": "Specifies a pre-defined ACL value or POSIX mode with a string.",
                    "in": "header",
                    "name": "x-isi-ifs-node-pool-name",
                    "type": "string"
                },
                {
                    "description": "Specifies the OneFS node pool name.",
                    "in": "query",
                    "name": "recursive",
                    "type": "boolean"
                },
                {
                    "description": "Deletes and replaces the existing user attributes and ACLs of the directory with user-specified attributes and ACLS from the header, when set to true.",
                    "in": "query",
                    "name": "overwrite",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Create directory using accesspoint and container path",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "post": {
            "description": "Moves a directory from an existing source to a new destination path.",
            "operationId": "moveDirectoryWithAccessPointContainerPath",
            "parameters": [
                {
                    "description": "Access point.",
                    "in": "path",
                    "name": "AccessPoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Directory path relative to access point.",
                    "in": "path",
                    "name": "ContainerPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the full path for the destination directory.",
                    "in": "header",
                    "name": "x-isi-ifs-set-location",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Move directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "delete": {
            "description": "Deletes the directory at the specified path.",
            "operationId": "deleteDirectoryWithAccessPointContainerPath",
            "parameters": [
                {
                    "description": "Access point.",
                    "in": "path",
                    "name": "AccessPoint",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Directory path relative to access point.",
                    "in": "path",
                    "name": "ContainerPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Deletes directories recursively, when set to true.",
                    "in": "query",
                    "name": "recursive",
                    "type": "boolean"
                }
            ],
            "responses": {
                "204": {
                    "description": "Deleted directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{DirectoryMetadataPath}": {
        "get": {
            "description": "Retrieves the attribute information for a specified directory with the metadata query argument.",
            "operationId": "getDirectoryMetadata",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryMetadataPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Show directory metadata.",
                    "in": "query",
                    "name": "metadata",
                    "required": true,
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get directory metadata.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceMetadataList"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Sets attributes on a specified directory with the metadata query argument.",
            "operationId": "setDirectoryMetadata",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "DirectoryMetadataPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Set directory metadata.",
                    "in": "query",
                    "name": "metadata",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "Directory metadata parameters model.",
                    "in": "body",
                    "name": "DirectoryMetadata",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/NamespaceMetadata"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Set metadata on directory.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{DirectoryCopyTarget}": {
        "put": {
            "description": "Recursively copies a directory to a specified destination path. Symbolic links are copied as regular files.",
            "operationId": "copyDirectory",
            "parameters": [
                {
                    "description": "Directory copy destination relative to /.",
                    "in": "path",
                    "name": "DirectoryCopyTarget",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the full path to the source directory.",
                    "in": "header",
                    "name": "x-isi-ifs-copy-source",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Deletes and replaces the existing user attributes and ACLs of the directory with user-specified attributes and ACLS from the header, when set to true.",
                    "in": "query",
                    "name": "overwrite",
                    "type": "boolean"
                },
                {
                    "description": "Specifies if the contents of a directory should be merged with an existing directory with the same name.",
                    "in": "query",
                    "name": "merge",
                    "type": "boolean"
                },
                {
                    "description": "Specifies whether to continue the copy operation on remaining objects when there is a conflict or error.",
                    "in": "query",
                    "name": "continue",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Copied directory.",
                    "schema": {
                        "$ref": "#/definitions/CopyErrors"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{FilePath}": {
        "get": {
            "description": "Retrieves the contents of a file from a specified path. Note that file streaming is not supported.",
            "operationId": "getFileContents",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Returns the specified range bytes of an object. ",
                    "in": "header",
                    "name": "Range",
                    "type": "string"
                },
                {
                    "description": "Returns only files that were modified since the specified time. If no files were modified since this time, a 304 message is returned.",
                    "in": "header",
                    "name": "If-Modified-Since",
                    "type": "string"
                },
                {
                    "description": "Returns only files that were not modified since the specified time. If there are no unmodified files since this time, a 412 message is returned to indicate that the precondition failed.",
                    "in": "header",
                    "name": "If-Unmodified-Since",
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get file objects.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "head": {
            "description": "Retrieves the attribute information for a specified file.",
            "operationId": "getFileAttributes",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Returns only files that were modified since the specified time. If no files were modified since this time, a 304 message is returned.",
                    "in": "header",
                    "name": "If-Modified-Since",
                    "type": "string"
                },
                {
                    "description": "Returns only files that were not modified since the specified time. If there are no unmodified files since this time, a 412 message is returned to indicate that the precondition failed.",
                    "in": "header",
                    "name": "If-Unmodified-Since",
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get attribute information for file.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Creates a file object with a given path. Note that file streaming is not supported.",
            "operationId": "createFile",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the resource type.",
                    "in": "header",
                    "name": "x-isi-ifs-target-type",
                    "required": true,
                    "default": "object",
                    "type": "string"
                },
                {
                    "default": "0600",
                    "description": "Specifies a pre-defined ACL value or POSIX mode with a string in octal string format.",
                    "in": "header",
                    "name": "x-isi-ifs-access-control",
                    "type": "string"
                },
                {
                    "description": "Specifies the content encoding that was applied to the object content, so that decoding can be applied when retrieving the content.",
                    "in": "header",
                    "name": "Content-Encoding",
                    "type": "string"
                },
                {
                    "default": "binary/octet-stream",
                    "description": "Specifies a standard MIME-type description of the content format.",
                    "in": "header",
                    "name": "Content-Type",
                    "type": "string"
                },
                {
                    "description": "Deletes and replaces the existing user attributes and ACLs of the directory with user-specified attributes and ACLS from the header, when set to true.",
                    "in": "query",
                    "name": "overwrite",
                    "type": "boolean"
                },
                {
                    "description": "The contents of the file object.",
                    "in": "body",
                    "name": "FileContents",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Created file object.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "post": {
            "description": "Moves a file to a destination path that does not yet exist.",
            "operationId": "moveFile",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the full path for the destination file. ",
                    "in": "header",
                    "name": "x-isi-ifs-set-location",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "200": {
                    "description": "Moved file.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "delete": {
            "description": "Deletes the specified file.",
            "operationId": "deleteFile",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FilePath",
                    "required": true,
                    "type": "string"
                }
            ],
            "responses": {
                "204": {
                    "description": "Deleted file.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{FileCopyTarget}": {
        "put": {
            "description": "Copies a file to the specified destination path.",
            "operationId": "copyFile",
            "parameters": [
                {
                    "description": "File copy destination relative to /.",
                    "in": "path",
                    "name": "FileCopyTarget",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Specifies the full path to the source file.",
                    "in": "header",
                    "name": "x-isi-ifs-copy-source",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "You must set this parameter to true in order to clone a file.",
                    "in": "query",
                    "name": "clone",
                    "type": "boolean"
                },
                {
                    "description": "Specifies a snapshot name to clone the file from.",
                    "in": "query",
                    "name": "snapshot",
                    "type": "string"
                },
                {
                    "description": "Specifies if an existing file should be overwritten by a new file with the same name.",
                    "in": "query",
                    "name": "overwrite",
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Copied file.",
                    "schema": {
                        "$ref": "#/definitions/CopyErrors"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{FileMetadataPath}": {
        "get": {
            "description": "Retrieves the attribute information for a specified file with the metadata query argument.",
            "operationId": "getFileMetadata",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FileMetadataPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Show file metadata.",
                    "in": "query",
                    "name": "metadata",
                    "required": true,
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get file metadata.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceMetadataList"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Sets attributes on a specified file with the metadata query argument through the JSON body.",
            "operationId": "setFileMetadata",
            "parameters": [
                {
                    "description": "File path relative to /.",
                    "in": "path",
                    "name": "FileMetadataPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Set file metadata.",
                    "in": "query",
                    "name": "metadata",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "File metadata parameters model.",
                    "in": "body",
                    "name": "FileMetadata",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/NamespaceMetadata"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Set metadata on file.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{QueryPath}": {
        "post": {
            "description": "Query objects by system-defined and user-defined attributes in a directory.",
            "operationId": "queryDirectory",
            "parameters": [
                {
                    "description": "Directory path relative to /.",
                    "in": "path",
                    "name": "QueryPath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "Enable directory query.",
                    "in": "query",
                    "name": "query",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "Specifies the maximum number of objects to send to the client. You can set the value to a negative number to retrieve all objects.",
                    "in": "query",
                    "name": "limit",
                    "type": "integer"
                },
                {
                    "description": "Specifies which object attributes are displayed. If the detail parameter is excluded, only the name of the object is returned.",
                    "in": "query",
                    "name": "detail",
                    "type": "string"
                },
                {
                    "description": "Specifies a token to return in the JSON result to indicate when there is a next page.",
                    "in": "query",
                    "name": "resume",
                    "type": "string"
                },
                {
                    "description": "Specifies one or more attributes to sort on the directory entries.",
                    "in": "query",
                    "name": "sort",
                    "type": "string"
                },
                {
                    "description": "Specifies the sort direction. This value can be either ascending (ASC) or descending (DESC).",
                    "in": "query",
                    "name": "dir",
                    "type": "string"
                },
                {
                    "description": "Specifies the object type to return, which can be one of the following values: container, object, pipe, character_device, block_device, symbolic_link, socket, or whiteout_file.",
                    "in": "query",
                    "name": "type",
                    "type": "string"
                },
                {
                    "description": "Specifies if hidden objects are returned.",
                    "in": "query",
                    "name": "hidden",
                    "type": "boolean"
                },
                {
                    "description": "Specifies the maximum directory level depth to search for objects.",
                    "in": "query",
                    "name": "max-depth",
                    "type": "integer"
                },
                {
                    "description": "Directory query parameters model.",
                    "in": "body",
                    "name": "DirectoryQuery",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/DirectoryQuery"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "Directory query results.",
                    "schema": {
                        "$ref": "#/definitions/NamespaceObjects"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    },
    "/namespace/{WormFilePath}": {
        "get": {
            "description": "Retrieves the WORM retention date and committed state of the file.",
            "operationId": "getWormProperties",
            "parameters": [
                {
                    "description": "Write once read many file path relative to /.",
                    "in": "path",
                    "name": "WormFilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "View WORM properties",
                    "in": "query",
                    "name": "worm",
                    "required": true,
                    "type": "boolean"
                }
            ],
            "responses": {
                "200": {
                    "description": "WORM file properties.",
                    "schema": {
                        "$ref": "#/definitions/WormProperties"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        },
        "put": {
            "description": "Sets the retention period and commits a file in a SmartLock directory.",
            "operationId": "setWormProperties",
            "parameters": [
                {
                    "description": "Write once read many file path relative to /.",
                    "in": "path",
                    "name": "WormFilePath",
                    "required": true,
                    "type": "string"
                },
                {
                    "description": "View WORM properties",
                    "in": "query",
                    "name": "worm",
                    "required": true,
                    "type": "boolean"
                },
                {
                    "description": "WORM parameters model.",
                    "in": "body",
                    "name": "WormProperties",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/WormCreateParams"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "WORM file properties.",
                    "schema": {
                        "$ref": "#/definitions/Empty"
                    }
                }
            },
            "tags": [
                "Namespace"
            ]
        }
    }
}
